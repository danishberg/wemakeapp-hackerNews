import styles from '../styles/Home.module.css';

import Head from 'next/head';
import cheerio from 'cheerio';
import axios from 'axios';
import { useState } from 'react';
import { useRouter } from 'next/router';

export async function getServerSideProps({ query }) {
	console.log(query);
	if (Object.keys(query).length === 0 || !query.search)
		return {
			props: {
				results: null,
			},
		};

	const job = query.search;
	const location = query.location || '';

	const { data } = await axios.get(
		`https://www.flexjobs.com/search?search=${job}&location=${location}`
	);
	const $ = cheerio.load(data);

	let results = [];
	const jobsLength = $('#job-list li').length;
	for (let i = 0; i < jobsLength; i++) {
		results.push({});
	}

	$('#job-list li').each(function (i, _elem) {
		results[i].id = i + 1;
	});
	$('#job-list li .job-title').each(function (i, elem) {
		results[i].jobTitle = $(elem).text().trim();
	});
	$('#job-list li .job-age').each(function (i, elem) {
		results[i].jobAge = $(elem).text().trim();
	});
	$('#job-list li .job-tags').each(function (i, elem) {
		results[i].jobTags = {};
		$(elem)
			.children()
			.each(function (i2, elem2) {
				results[i].jobTags[`tag${i2}`] = $(elem2).text().trim();
			});
	});
	$('#job-list li .job-locations').each(function (i, elem) {
		results[i].jobLocation = $(elem).text().split('&')[0].trim();
	});
	$('#job-list li .job-description').each(function (i, elem) {
		results[i].jobDescription = $(elem).text().trim();
	});
	console.log(results);
	return {
		props: { results },
	};
}

export default function Home({ results }) {
	const [inputValue, setInputValue] = useState('');
	const router = useRouter();

	return (
		<div className={styles.container}>
			<Head>
				<title>Create Next App</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<form
				onSubmit={(e) => {
					e.preventDefault();
					router.push(`?search=${inputValue}`);
				}}>
				<input
					type='text'
					value={inputValue}
					onInput={(e) => setInputValue(e.target.value)}
				/>
			</form>
			{results?.map((result, index) => (
				<ul key={index}>
					<li>{result.jobTitle}</li>
					<li>{result.jobAge}</li>
					<li>
						<span>{result.jobTags.tag0}</span>
						<span>{result.jobTags.tag1}</span>
					</li>
					<li>{result.jobLocation}</li>
					<li>{result.jobDescription}</li>
				</ul>
			))}
			fddc
		</div>
	);
}
